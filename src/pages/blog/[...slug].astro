---
import { getCollection, type CollectionEntry } from 'astro:content';
import Base from '../../layouts/BaseLayout.astro';
import { Image } from 'astro:assets';
import { formatDateWithOrdinal } from '../../utils/date';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = { post: CollectionEntry<'blog'> };

const { post } = Astro.props as Props;
const { Content } = await post.render();
const displayDate = formatDateWithOrdinal(post.data.date);
---

<Base title={post.data.title} description={post.data.subtitle} type="article">
  <article class="post-page">
    <header class="post-header">
      <h1>{post.data.title}</h1>
      <p class="subtitle">{post.data.subtitle}</p>
      <p class="date">
        <time datetime={post.data.date.toISOString()}>{displayDate}</time>
        <span class="post-tags">
          {post.data.tags.map((tag) => <span class="tag">{tag}</span>)}
        </span>
      </p>
      {
        post.data.image && (
          <div class="post-image">
            <Image
              src={post.data.image as ImageMetadata}
              alt={post.data.image_alt ?? ''}
              width={800}
              height={450}
              fit="contain"
            />
          </div>
        )
      }
    </header>
    <div class="post-content">
      <Content />
    </div>
  </article>
</Base>

<style>
  .post-page {
    max-width: 900px;
    margin-inline: auto;
  }

  .post-header {
    margin-top: 3rem;
    margin-bottom: 2rem;
  }

  .subtitle {
    color: var(--muted);
    margin: 0.25rem 0 0.75rem 0;
  }

  .date {
    color: var(--muted);
    font-size: 0.9rem;
  }

  .post-image {
    margin: 1.5rem 0 2rem 0;
    display: flex;
    justify-content: center;
  }

  .post-content :global(img) {
    max-width: 50%;
    height: auto;
    display: block;
    margin-inline: auto;
    cursor: zoom-in;
  }

  :global(.image-modal) {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    cursor: zoom-out;
  }

  :global(.image-modal .modal-content) {
    max-width: 95%;
    max-height: 95%;
  }

  :global(.image-modal img) {
    max-width: 100%;
    max-height: 95vh;
    object-fit: contain;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const images =
      document.querySelectorAll<HTMLImageElement>('.post-content img');

    images.forEach((img) => {
      img.addEventListener('click', () => {
        // Create modal
        const modal = document.createElement('div');
        modal.className = 'image-modal';
        modal.innerHTML = `
          <div class="modal-content">
            <img src="${img.src}" alt="${img.alt}">
          </div>
        `;

        // Close on click
        modal.addEventListener('click', () => {
          modal.remove();
        });

        document.body.appendChild(modal);
      });
    });
  });
</script>
