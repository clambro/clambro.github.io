---
import { getCollection, type CollectionEntry } from 'astro:content';
import Base from '../../layouts/BaseLayout.astro';
import { Image } from 'astro:assets';
import { formatDateWithOrdinal } from '../../utils/date';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = { post: CollectionEntry<'blog'> };

const { post } = Astro.props as Props;
const { Content } = await post.render();
const displayDate = formatDateWithOrdinal(post.data.date);
---

<Base title={`${post.data.title}`}>
  <article class="post-page">
    <header class="post-header">
      <h1>{post.data.title}</h1>
      <p class="subtitle">{post.data.subtitle}</p>
      <p class="date">
        <time datetime={post.data.date.toISOString()}>{displayDate}</time>
        <span class="post-tags">
          {post.data.tags.map((tag) => <span class="tag">{tag}</span>)}
        </span>
      </p>
      {
        post.data.image && (
          <div class="post-image">
            <Image
              src={post.data.image as ImageMetadata}
              alt={post.data.image_alt ?? ''}
              width={800}
              height={450}
              fit="contain"
            />
          </div>
        )
      }
    </header>
    <div class="post-content">
      <Content />
    </div>
  </article>
</Base>

<style>
  .post-page {
    max-width: 800px;
    margin-inline: auto;
  }

  .subtitle {
    color: var(--muted);
    margin: 0.25rem 0 0.75rem 0;
  }

  .date {
    color: var(--muted);
    font-size: 0.9rem;
  }

  .post-image {
    margin: 1.5rem 0 2rem 0;
    display: flex;
    justify-content: center;
  }

  .post-content {
    line-height: 1.7;
  }
</style>
